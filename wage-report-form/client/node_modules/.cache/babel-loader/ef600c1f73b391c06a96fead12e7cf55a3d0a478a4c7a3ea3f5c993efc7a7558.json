{"ast":null,"code":"var _jsxFileName = \"/Users/drinz/Documents/GitHub/HakiPay/wage-report-form/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const MIN_REPORTS = 20;\n  const [role, setRole] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [industry, setIndustry] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [wage, setWage] = useState(\"\");\n  const [currency, setCurrency] = useState(\"USD\");\n  const [wages, setWages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [sortField, setSortField] = useState(\"wage\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n  const predefinedRoles = [\"Cleaning\", \"Teaching\", \"Engineering\", \"Other\"];\n  const predefinedRegions = [\"Zanzibar North\", \"Dar es Salaam\", \"Arusha\", \"Other\"];\n  const predefinedIndustries = [\"Hospitality\", \"Tech\", \"Construction\", \"Other\"];\n  const currencies = [\"USD\", \"TZS\", \"EUR\"];\n  useEffect(() => {\n    fetchWages();\n  }, [role, region]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (experience < 0 || wage < 0) {\n      setMessage(\"Experience and Wage cannot be negative.\");\n      return;\n    }\n    try {\n      await axios.post(\"http://localhost:5000/api/wages\", {\n        role,\n        region,\n        industry,\n        experience: Number(experience),\n        companyName,\n        wage: Number(wage),\n        currency,\n        userId: Math.random().toString(36).substring(2, 10)\n      });\n      setMessage(\"Wage submitted successfully!\");\n      setRole(\"\");\n      setRegion(\"\");\n      setIndustry(\"\");\n      setExperience(\"\");\n      setCompanyName(\"\");\n      setWage(\"\");\n      setCurrency(\"USD\");\n      fetchWages();\n      setTimeout(() => setMessage(\"\"), 4000);\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Error submitting wage.\");\n    }\n  };\n  const fetchWages = async () => {\n    if (!role || !region) return;\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/wages\", {\n        params: {\n          role,\n          region\n        }\n      });\n      setWages(res.data);\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Error fetching wages.\");\n    }\n  };\n  const averageWage = wages.length ? (wages.reduce((sum, w) => sum + w.wage, 0) / wages.length).toFixed(2) : 0;\n  const minWage = wages.length ? Math.min(...wages.map(w => w.wage)) : 0;\n  const maxWage = wages.length ? Math.max(...wages.map(w => w.wage)) : 0;\n  const sortedWages = [...wages].sort((a, b) => {\n    if (sortDirection === \"asc\") return a[sortField] - b[sortField];else return b[sortField] - a[sortField];\n  });\n  const exportCSV = () => {\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    csvContent += \"Role,Region,Industry,Experience,Company,Wage,Currency,Submitted At\\n\";\n    sortedWages.forEach(w => {\n      const companyDisplay = wages.length >= MIN_REPORTS ? w.companyName : \"Hidden Company\";\n      csvContent += `${w.role},${w.region},${w.industry},${w.experience},${companyDisplay},${w.wage},${w.currency},${new Date(w.createdAt).toLocaleString()}\\n`;\n    });\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"wages.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anonymous Wage Reporting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"notice\",\n      children: [\"All submissions are anonymous. Names will be revealed after \", MIN_REPORTS, \" reports.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), predefinedRoles.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r,\n          children: r\n        }, r, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: region,\n        onChange: e => setRegion(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), predefinedRegions.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r,\n          children: r\n        }, r, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: industry,\n        onChange: e => setIndustry(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Industry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), predefinedIndustries.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r,\n          children: r\n        }, r, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Experience (years)\",\n        value: experience,\n        onChange: e => setExperience(e.target.value),\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company Name\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Wage\",\n        value: wage,\n        onChange: e => setWage(e.target.value),\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: currency,\n        onChange: e => setCurrency(e.target.value),\n        required: true,\n        children: currencies.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c,\n          children: c\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Wage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Average Wage: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: averageWage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Min: \", minWage, \" | Max: \", maxWage, \" | Reports: \", wages.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fetch-btn\",\n      onClick: fetchWages,\n      children: \"Fetch Wages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"export-btn\",\n      onClick: exportCSV,\n      children: \"Export CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => {\n                setSortField(\"role\");\n                setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n              },\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => {\n                setSortField(\"region\");\n                setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n              },\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => {\n                setSortField(\"industry\");\n                setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n              },\n              children: \"Industry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => {\n                setSortField(\"experience\");\n                setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n              },\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => {\n                setSortField(\"wage\");\n                setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\");\n              },\n              children: \"Wage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Submitted At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sortedWages.map((w, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: w.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: w.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: w.industry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: w.experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: wages.length >= MIN_REPORTS ? w.companyName : \"Hidden Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: w.wage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(w.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"db-link\",\n      children: [\"View related company data:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://example-sql-database-link.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"SQL Company Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W9s9o6GGmIhfeDVzjLtjYk6LJBY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","MIN_REPORTS","role","setRole","region","setRegion","industry","setIndustry","experience","setExperience","companyName","setCompanyName","wage","setWage","currency","setCurrency","wages","setWages","message","setMessage","sortField","setSortField","sortDirection","setSortDirection","predefinedRoles","predefinedRegions","predefinedIndustries","currencies","fetchWages","handleSubmit","e","preventDefault","post","Number","userId","Math","random","toString","substring","setTimeout","err","console","error","res","get","params","data","averageWage","length","reduce","sum","w","toFixed","minWage","min","map","maxWage","max","sortedWages","sort","a","b","exportCSV","csvContent","forEach","companyDisplay","Date","createdAt","toLocaleString","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","r","type","placeholder","c","onClick","i","href","rel","_c","$RefreshReg$"],"sources":["/Users/drinz/Documents/GitHub/HakiPay/wage-report-form/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const MIN_REPORTS = 20;\n  const [role, setRole] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [industry, setIndustry] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [wage, setWage] = useState(\"\");\n  const [currency, setCurrency] = useState(\"USD\");\n  const [wages, setWages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [sortField, setSortField] = useState(\"wage\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n\n  const predefinedRoles = [\"Cleaning\", \"Teaching\", \"Engineering\", \"Other\"];\n  const predefinedRegions = [\"Zanzibar North\", \"Dar es Salaam\", \"Arusha\", \"Other\"];\n  const predefinedIndustries = [\"Hospitality\", \"Tech\", \"Construction\", \"Other\"];\n  const currencies = [\"USD\", \"TZS\", \"EUR\"];\n\n  useEffect(() => {\n    fetchWages();\n  }, [role, region]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (experience < 0 || wage < 0) {\n      setMessage(\"Experience and Wage cannot be negative.\");\n      return;\n    }\n    try {\n      await axios.post(\"http://localhost:5000/api/wages\", {\n        role,\n        region,\n        industry,\n        experience: Number(experience),\n        companyName,\n        wage: Number(wage),\n        currency,\n        userId: Math.random().toString(36).substring(2, 10),\n      });\n      setMessage(\"Wage submitted successfully!\");\n      setRole(\"\");\n      setRegion(\"\");\n      setIndustry(\"\");\n      setExperience(\"\");\n      setCompanyName(\"\");\n      setWage(\"\");\n      setCurrency(\"USD\");\n      fetchWages();\n      setTimeout(() => setMessage(\"\"), 4000);\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Error submitting wage.\");\n    }\n  };\n\n  const fetchWages = async () => {\n    if (!role || !region) return;\n    try {\n      const res = await axios.get(\"http://localhost:5000/api/wages\", {\n        params: { role, region },\n      });\n      setWages(res.data);\n    } catch (err) {\n      console.error(err);\n      setMessage(\"Error fetching wages.\");\n    }\n  };\n\n  const averageWage = wages.length\n    ? (wages.reduce((sum, w) => sum + w.wage, 0) / wages.length).toFixed(2)\n    : 0;\n  const minWage = wages.length ? Math.min(...wages.map((w) => w.wage)) : 0;\n  const maxWage = wages.length ? Math.max(...wages.map((w) => w.wage)) : 0;\n\n  const sortedWages = [...wages].sort((a, b) => {\n    if (sortDirection === \"asc\") return a[sortField] - b[sortField];\n    else return b[sortField] - a[sortField];\n  });\n\n  const exportCSV = () => {\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    csvContent += \"Role,Region,Industry,Experience,Company,Wage,Currency,Submitted At\\n\";\n    sortedWages.forEach((w) => {\n      const companyDisplay = wages.length >= MIN_REPORTS ? w.companyName : \"Hidden Company\";\n      csvContent += `${w.role},${w.region},${w.industry},${w.experience},${companyDisplay},${w.wage},${w.currency},${new Date(\n        w.createdAt\n      ).toLocaleString()}\\n`;\n    });\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"wages.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Anonymous Wage Reporting</h1>\n      <p className=\"notice\">\n        All submissions are anonymous. Names will be revealed after {MIN_REPORTS} reports.\n      </p>\n\n      {message && <div className=\"message\">{message}</div>}\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <select value={role} onChange={(e) => setRole(e.target.value)} required>\n          <option value=\"\">Select Role</option>\n          {predefinedRoles.map((r) => (\n            <option key={r} value={r}>{r}</option>\n          ))}\n        </select>\n\n        <select value={region} onChange={(e) => setRegion(e.target.value)} required>\n          <option value=\"\">Select Region</option>\n          {predefinedRegions.map((r) => (\n            <option key={r} value={r}>{r}</option>\n          ))}\n        </select>\n\n        <select value={industry} onChange={(e) => setIndustry(e.target.value)} required>\n          <option value=\"\">Select Industry</option>\n          {predefinedIndustries.map((r) => (\n            <option key={r} value={r}>{r}</option>\n          ))}\n        </select>\n\n        <input\n          type=\"number\"\n          placeholder=\"Experience (years)\"\n          value={experience}\n          onChange={(e) => setExperience(e.target.value)}\n          min=\"0\"\n          required\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Company Name\"\n          value={companyName}\n          onChange={(e) => setCompanyName(e.target.value)}\n          required\n        />\n\n        <input\n          type=\"number\"\n          placeholder=\"Wage\"\n          value={wage}\n          onChange={(e) => setWage(e.target.value)}\n          min=\"0\"\n          required\n        />\n\n        <select value={currency} onChange={(e) => setCurrency(e.target.value)} required>\n          {currencies.map((c) => (\n            <option key={c} value={c}>{c}</option>\n          ))}\n        </select>\n\n        <button type=\"submit\">Submit Wage</button>\n      </form>\n\n      <div className=\"stats\">\n        <div>Average Wage: <strong>{averageWage}</strong></div>\n        <div>Min: {minWage} | Max: {maxWage} | Reports: {wages.length}</div>\n      </div>\n\n      <button className=\"fetch-btn\" onClick={fetchWages}>\n        Fetch Wages\n      </button>\n\n      <button className=\"export-btn\" onClick={exportCSV}>\n        Export CSV\n      </button>\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th onClick={() => {setSortField(\"role\"); setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\")}}>Role</th>\n              <th onClick={() => {setSortField(\"region\"); setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\")}}>Region</th>\n              <th onClick={() => {setSortField(\"industry\"); setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\")}}>Industry</th>\n              <th onClick={() => {setSortField(\"experience\"); setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\")}}>Experience</th>\n              <th>Company</th>\n              <th onClick={() => {setSortField(\"wage\"); setSortDirection(sortDirection === \"asc\" ? \"desc\" : \"asc\")}}>Wage</th>\n              <th>Submitted At</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedWages.map((w, i) => (\n              <tr key={i}>\n                <td>{w.role}</td>\n                <td>{w.region}</td>\n                <td>{w.industry}</td>\n                <td>{w.experience}</td>\n                <td>{wages.length >= MIN_REPORTS ? w.companyName : \"Hidden Company\"}</td>\n                <td>{w.wage}</td>\n                <td>{new Date(w.createdAt).toLocaleString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <p className=\"db-link\">\n        View related company data:{\" \"}\n        <a href=\"https://example-sql-database-link.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          SQL Company Database\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,MAAM,CAAC;EAE1D,MAAM8B,eAAe,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,OAAO,CAAC;EACxE,MAAMC,iBAAiB,GAAG,CAAC,gBAAgB,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,CAAC;EAChF,MAAMC,oBAAoB,GAAG,CAAC,aAAa,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC;EAC7E,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EAExChC,SAAS,CAAC,MAAM;IACdiC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAAC1B,IAAI,EAAEE,MAAM,CAAC,CAAC;EAElB,MAAMyB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIvB,UAAU,GAAG,CAAC,IAAII,IAAI,GAAG,CAAC,EAAE;MAC9BO,UAAU,CAAC,yCAAyC,CAAC;MACrD;IACF;IACA,IAAI;MACF,MAAMvB,KAAK,CAACoC,IAAI,CAAC,iCAAiC,EAAE;QAClD9B,IAAI;QACJE,MAAM;QACNE,QAAQ;QACRE,UAAU,EAAEyB,MAAM,CAACzB,UAAU,CAAC;QAC9BE,WAAW;QACXE,IAAI,EAAEqB,MAAM,CAACrB,IAAI,CAAC;QAClBE,QAAQ;QACRoB,MAAM,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE;MACpD,CAAC,CAAC;MACFnB,UAAU,CAAC,8BAA8B,CAAC;MAC1ChB,OAAO,CAAC,EAAE,CAAC;MACXE,SAAS,CAAC,EAAE,CAAC;MACbE,WAAW,CAAC,EAAE,CAAC;MACfE,aAAa,CAAC,EAAE,CAAC;MACjBE,cAAc,CAAC,EAAE,CAAC;MAClBE,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,KAAK,CAAC;MAClBa,UAAU,CAAC,CAAC;MACZW,UAAU,CAAC,MAAMpB,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACxC,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBrB,UAAU,CAAC,wBAAwB,CAAC;IACtC;EACF,CAAC;EAED,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC1B,IAAI,IAAI,CAACE,MAAM,EAAE;IACtB,IAAI;MACF,MAAMuC,GAAG,GAAG,MAAM/C,KAAK,CAACgD,GAAG,CAAC,iCAAiC,EAAE;QAC7DC,MAAM,EAAE;UAAE3C,IAAI;UAAEE;QAAO;MACzB,CAAC,CAAC;MACFa,QAAQ,CAAC0B,GAAG,CAACG,IAAI,CAAC;IACpB,CAAC,CAAC,OAAON,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBrB,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,MAAM4B,WAAW,GAAG/B,KAAK,CAACgC,MAAM,GAC5B,CAAChC,KAAK,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACvC,IAAI,EAAE,CAAC,CAAC,GAAGI,KAAK,CAACgC,MAAM,EAAEI,OAAO,CAAC,CAAC,CAAC,GACrE,CAAC;EACL,MAAMC,OAAO,GAAGrC,KAAK,CAACgC,MAAM,GAAGb,IAAI,CAACmB,GAAG,CAAC,GAAGtC,KAAK,CAACuC,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACvC,IAAI,CAAC,CAAC,GAAG,CAAC;EACxE,MAAM4C,OAAO,GAAGxC,KAAK,CAACgC,MAAM,GAAGb,IAAI,CAACsB,GAAG,CAAC,GAAGzC,KAAK,CAACuC,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACvC,IAAI,CAAC,CAAC,GAAG,CAAC;EAExE,MAAM8C,WAAW,GAAG,CAAC,GAAG1C,KAAK,CAAC,CAAC2C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC5C,IAAIvC,aAAa,KAAK,KAAK,EAAE,OAAOsC,CAAC,CAACxC,SAAS,CAAC,GAAGyC,CAAC,CAACzC,SAAS,CAAC,CAAC,KAC3D,OAAOyC,CAAC,CAACzC,SAAS,CAAC,GAAGwC,CAAC,CAACxC,SAAS,CAAC;EACzC,CAAC,CAAC;EAEF,MAAM0C,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIC,UAAU,GAAG,8BAA8B;IAC/CA,UAAU,IAAI,sEAAsE;IACpFL,WAAW,CAACM,OAAO,CAAEb,CAAC,IAAK;MACzB,MAAMc,cAAc,GAAGjD,KAAK,CAACgC,MAAM,IAAI/C,WAAW,GAAGkD,CAAC,CAACzC,WAAW,GAAG,gBAAgB;MACrFqD,UAAU,IAAI,GAAGZ,CAAC,CAACjD,IAAI,IAAIiD,CAAC,CAAC/C,MAAM,IAAI+C,CAAC,CAAC7C,QAAQ,IAAI6C,CAAC,CAAC3C,UAAU,IAAIyD,cAAc,IAAId,CAAC,CAACvC,IAAI,IAAIuC,CAAC,CAACrC,QAAQ,IAAI,IAAIoD,IAAI,CACrHf,CAAC,CAACgB,SACJ,CAAC,CAACC,cAAc,CAAC,CAAC,IAAI;IACxB,CAAC,CAAC;IACF,MAAMC,UAAU,GAAGC,SAAS,CAACP,UAAU,CAAC;IACxC,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEL,UAAU,CAAC;IACrCE,IAAI,CAACG,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC;IAC1CF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;IAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;IACZL,QAAQ,CAACG,IAAI,CAACG,WAAW,CAACP,IAAI,CAAC;EACjC,CAAC;EAED,oBACEzE,OAAA;IAAKiF,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlF,OAAA;MAAAkF,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCtF,OAAA;MAAGiF,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,8DACwC,EAAC/E,WAAW,EAAC,WAC3E;IAAA;MAAAgF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEHlE,OAAO,iBAAIpB,OAAA;MAAKiF,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAE9D;IAAO;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEpDtF,OAAA;MAAMiF,SAAS,EAAC,MAAM;MAACM,QAAQ,EAAExD,YAAa;MAAAmD,QAAA,gBAC5ClF,OAAA;QAAQwF,KAAK,EAAEpF,IAAK;QAACqF,QAAQ,EAAGzD,CAAC,IAAK3B,OAAO,CAAC2B,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;QAAAT,QAAA,gBACrElF,OAAA;UAAQwF,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACpC5D,eAAe,CAAC+B,GAAG,CAAEmC,CAAC,iBACrB5F,OAAA;UAAgBwF,KAAK,EAAEI,CAAE;UAAAV,QAAA,EAAEU;QAAC,GAAfA,CAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETtF,OAAA;QAAQwF,KAAK,EAAElF,MAAO;QAACmF,QAAQ,EAAGzD,CAAC,IAAKzB,SAAS,CAACyB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;QAAAT,QAAA,gBACzElF,OAAA;UAAQwF,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtC3D,iBAAiB,CAAC8B,GAAG,CAAEmC,CAAC,iBACvB5F,OAAA;UAAgBwF,KAAK,EAAEI,CAAE;UAAAV,QAAA,EAAEU;QAAC,GAAfA,CAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETtF,OAAA;QAAQwF,KAAK,EAAEhF,QAAS;QAACiF,QAAQ,EAAGzD,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;QAAAT,QAAA,gBAC7ElF,OAAA;UAAQwF,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxC1D,oBAAoB,CAAC6B,GAAG,CAAEmC,CAAC,iBAC1B5F,OAAA;UAAgBwF,KAAK,EAAEI,CAAE;UAAAV,QAAA,EAAEU;QAAC,GAAfA,CAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETtF,OAAA;QACE6F,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,oBAAoB;QAChCN,KAAK,EAAE9E,UAAW;QAClB+E,QAAQ,EAAGzD,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QAC/ChC,GAAG,EAAC,GAAG;QACPmC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFtF,OAAA;QACE6F,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1BN,KAAK,EAAE5E,WAAY;QACnB6E,QAAQ,EAAGzD,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QAChDG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFtF,OAAA;QACE6F,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,MAAM;QAClBN,KAAK,EAAE1E,IAAK;QACZ2E,QAAQ,EAAGzD,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QACzChC,GAAG,EAAC,GAAG;QACPmC,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFtF,OAAA;QAAQwF,KAAK,EAAExE,QAAS;QAACyE,QAAQ,EAAGzD,CAAC,IAAKf,WAAW,CAACe,CAAC,CAAC0D,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;QAAAT,QAAA,EAC5ErD,UAAU,CAAC4B,GAAG,CAAEsC,CAAC,iBAChB/F,OAAA;UAAgBwF,KAAK,EAAEO,CAAE;UAAAb,QAAA,EAAEa;QAAC,GAAfA,CAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETtF,OAAA;QAAQ6F,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAEPtF,OAAA;MAAKiF,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBlF,OAAA;QAAAkF,QAAA,GAAK,gBAAc,eAAAlF,OAAA;UAAAkF,QAAA,EAASjC;QAAW;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDtF,OAAA;QAAAkF,QAAA,GAAK,OAAK,EAAC3B,OAAO,EAAC,UAAQ,EAACG,OAAO,EAAC,cAAY,EAACxC,KAAK,CAACgC,MAAM;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eAENtF,OAAA;MAAQiF,SAAS,EAAC,WAAW;MAACe,OAAO,EAAElE,UAAW;MAAAoD,QAAA,EAAC;IAEnD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETtF,OAAA;MAAQiF,SAAS,EAAC,YAAY;MAACe,OAAO,EAAEhC,SAAU;MAAAkB,QAAA,EAAC;IAEnD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETtF,OAAA;MAAKiF,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BlF,OAAA;QAAAkF,QAAA,gBACElF,OAAA;UAAAkF,QAAA,eACElF,OAAA;YAAAkF,QAAA,gBACElF,OAAA;cAAIgG,OAAO,EAAEA,CAAA,KAAM;gBAACzE,YAAY,CAAC,MAAM,CAAC;gBAAEE,gBAAgB,CAACD,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;cAAA,CAAE;cAAA0D,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChHtF,OAAA;cAAIgG,OAAO,EAAEA,CAAA,KAAM;gBAACzE,YAAY,CAAC,QAAQ,CAAC;gBAAEE,gBAAgB,CAACD,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;cAAA,CAAE;cAAA0D,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpHtF,OAAA;cAAIgG,OAAO,EAAEA,CAAA,KAAM;gBAACzE,YAAY,CAAC,UAAU,CAAC;gBAAEE,gBAAgB,CAACD,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;cAAA,CAAE;cAAA0D,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxHtF,OAAA;cAAIgG,OAAO,EAAEA,CAAA,KAAM;gBAACzE,YAAY,CAAC,YAAY,CAAC;gBAAEE,gBAAgB,CAACD,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;cAAA,CAAE;cAAA0D,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5HtF,OAAA;cAAAkF,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBtF,OAAA;cAAIgG,OAAO,EAAEA,CAAA,KAAM;gBAACzE,YAAY,CAAC,MAAM,CAAC;gBAAEE,gBAAgB,CAACD,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC;cAAA,CAAE;cAAA0D,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChHtF,OAAA;cAAAkF,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRtF,OAAA;UAAAkF,QAAA,EACGtB,WAAW,CAACH,GAAG,CAAC,CAACJ,CAAC,EAAE4C,CAAC,kBACpBjG,OAAA;YAAAkF,QAAA,gBACElF,OAAA;cAAAkF,QAAA,EAAK7B,CAAC,CAACjD;YAAI;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjBtF,OAAA;cAAAkF,QAAA,EAAK7B,CAAC,CAAC/C;YAAM;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnBtF,OAAA;cAAAkF,QAAA,EAAK7B,CAAC,CAAC7C;YAAQ;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBtF,OAAA;cAAAkF,QAAA,EAAK7B,CAAC,CAAC3C;YAAU;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBtF,OAAA;cAAAkF,QAAA,EAAKhE,KAAK,CAACgC,MAAM,IAAI/C,WAAW,GAAGkD,CAAC,CAACzC,WAAW,GAAG;YAAgB;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzEtF,OAAA;cAAAkF,QAAA,EAAK7B,CAAC,CAACvC;YAAI;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACjBtF,OAAA;cAAAkF,QAAA,EAAK,IAAId,IAAI,CAACf,CAAC,CAACgB,SAAS,CAAC,CAACC,cAAc,CAAC;YAAC;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAP1CW,CAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQN,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENtF,OAAA;MAAGiF,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,4BACK,EAAC,GAAG,eAC9BlF,OAAA;QAAGkG,IAAI,EAAC,uCAAuC;QAACR,MAAM,EAAC,QAAQ;QAACS,GAAG,EAAC,qBAAqB;QAAAjB,QAAA,EAAC;MAE1F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACpF,EAAA,CAtNQD,GAAG;AAAAmG,EAAA,GAAHnG,GAAG;AAwNZ,eAAeA,GAAG;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}